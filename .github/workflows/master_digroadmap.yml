# GitHub Actions workflow for deploying static HTML site to Azure Web App
# Optimized for Axure RP generated static websites

name: Build and deploy static site to Azure Web App - digroadmap

env:
  AZURE_WEBAPP_NAME: 'digroadmap'   # Azure Web App name
  AZURE_WEBAPP_PACKAGE_PATH: '.'    # Path to web app project (repository root)

on:
  push:
    branches:
      - master
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify required files exist
        run: |
          echo "Checking for essential files..."
          ls -la
          if [ ! -f "current.html" ]; then
            echo "Warning: current.html not found"
          else
            echo "✓ current.html found"
          fi
          if [ ! -f "index.html" ]; then
            echo "Warning: index.html not found"
          else
            echo "✓ index.html found"
          fi
          if [ ! -f "web.config" ]; then
            echo "Warning: web.config not found"
          else
            echo "✓ web.config found"
          fi
          if [ ! -d "resources" ]; then
            echo "Warning: resources directory not found"
          else
            echo "✓ resources directory found"
          fi

      - name: List all files to be deployed
        run: |
          echo "Files and directories to be deployed:"
          find . -type f -name "*.html" | head -10
          find . -type f -name "*.css" | head -5
          find . -type f -name "*.js" | head -5
          echo "Directory structure:"
          ls -la

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Verify deployment
        run: |
          echo "Deployment completed to: ${{ steps.deploy-to-webapp.outputs.webapp-url }}"
          echo "Expected main page: ${{ steps.deploy-to-webapp.outputs.webapp-url }}/current.html"
          echo "Testing deployment in 30 seconds..."
          sleep 30
          
      - name: Test deployed application
        run: |
          echo "Testing main application URL..."
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "${{ steps.deploy-to-webapp.outputs.webapp-url }}" || echo "000")
          echo "Main URL HTTP Status: $HTTP_STATUS"
          
          echo "Testing current.html directly..."
          HTTP_STATUS_CURRENT=$(curl -s -o /dev/null -w "%{http_code}" "${{ steps.deploy-to-webapp.outputs.webapp-url }}/current.html" || echo "000")
          echo "current.html HTTP Status: $HTTP_STATUS_CURRENT"
          
          if [ "$HTTP_STATUS_CURRENT" = "200" ]; then
            echo "✓ Deployment appears successful - current.html is accessible"
          else
            echo "⚠ Warning: current.html returned status $HTTP_STATUS_CURRENT"
          fi
